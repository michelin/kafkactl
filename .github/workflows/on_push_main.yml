name: Continuous integration

on:
  push:
    branches: [ main ]

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MICHELIN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.MICHELIN_DOCKER_HUB_PASSWD }}

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        id: build_jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew build jacocoTestReport sonar --info
          echo current_version=$(echo $(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')) >> $GITHUB_OUTPUT

      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Docker
        run: ./gradlew dockerBuild dockerPush

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: kafkactl-jar
          path: ${{ github.workspace }}/build/libs/kafkactl-${{ steps.build_jar.outputs.current_version }}.jar

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MICHELIN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.MICHELIN_DOCKER_HUB_PASSWD }}
          
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build
        id: build_native
        run: |
          ./gradlew nativeCompile
          echo current_version=$(echo $(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')) >> $GITHUB_OUTPUT

      - name: Docker
        run: ./gradlew dockerBuildNative dockerPushNative

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: kafkactl-linux
          path: ${{ github.workspace }}/build/native/nativeCompile/kafkactl-${{ steps.build_native.outputs.current_version }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.3

      - name: Build
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          gradlew.bat nativeCompile
        shell: cmd

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: kafkactl-windows
          path: ${{ github.workspace }}/build/native/nativeCompile/kafkactl-*.exe
