name: Push Main

on:
  push:
    branches:
      - 'main'

jobs:
  build-jar:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MICHELIN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.MICHELIN_DOCKER_HUB_PASSWD }}

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Check style
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Build and analyze
        id: build_jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew build jacocoTestReport sonar --info
          echo current_version=$(echo $(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')) >> $GITHUB_OUTPUT

      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Rename file
        run: mv ${{ github.workspace }}/build/libs/kafkactl-${{ steps.build_jar.outputs.current_version }}.jar ${{ github.workspace }}/build/libs/kafkactl.jar

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: kafkactl-jar
          path: ${{ github.workspace }}/build/libs/kafkactl-${{ steps.build_jar.outputs.current_version }}.jar

      - name: Docker
        run: ./gradlew dockerBuild dockerPush

  build-native:
    name: Build Native Image ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        include:
          - os: 'ubuntu-latest'
            platform: 'linux-amd64'
            extension: ''
          - os: 'macos-latest'
            platform: 'darwin-arm64'
            extension: ''
          - os: 'windows-latest'
            platform: 'windows-amd64'
            extension: '.exe'
    steps:
      - name: Docker login
        if: matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.MICHELIN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.MICHELIN_DOCKER_HUB_PASSWD }}

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Check style
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Build
        id: build_native
        run: |
          ./gradlew nativeCompile
          echo current_version=$(echo $(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')) >> $GITHUB_OUTPUT

      - name: Rename file
        run: mv ${{ github.workspace }}/build/native/nativeCompile/kafkactl-${{ steps.build_native.outputs.current_version }}${{ matrix.extension }} ${{ github.workspace }}/build/native/nativeCompile/kafkactl-${{ matrix.platform }}${{ matrix.extension }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: kafkactl-${{ matrix.platform }}
          path: ${{ github.workspace }}/build/native/nativeCompile/kafkactl-${{ steps.build_native.outputs.current_version }}${{ matrix.extension }}

      - name: Docker
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew dockerBuildNative dockerPushNative